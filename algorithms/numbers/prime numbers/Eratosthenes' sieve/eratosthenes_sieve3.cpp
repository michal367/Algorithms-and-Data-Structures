#include <iostream>
#include <cstdlib>
#include <cmath>

using namespace std;

int main()
{
    cout << "Eratosthenes' sieve - Xuedong Luo algorithm" << endl;
    cout << "Prime numbers in a range <2;n> generated by Eratosthenes' sieve" << endl << endl;

    int n;
    cout << "n: ";
    do{
        cin >> n;
    }while(n<2);

    const int size = ceil(n/3.0)-1;
    bool* is_prime = new bool[size];
    for(bool* ptr = is_prime; ptr != is_prime+size; ++ptr)
        *(ptr) = true;


    int square_root = sqrt(n);

    int i = 5, p = 0, q = 7;
    int temp = 0, temp2 = 0;
    int k  = 2, ij = 3, t = 2;
    while(p <= square_root)
    {
        t  += 4*k;
        int index = q;

        while(index < size)
        {
            *(is_prime + index) = false;

            index += ij;
            ij = t - ij;
            //cout << ij << endl;
        }

        //cout << p << "     " << q << "   t: " << temp << endl;
        ++p;
        if(p%2 == 0 || p == 1)
        {
            temp2 += 8;
            temp += temp2;
        }
        else
        {
            temp -= temp2 - 8;
        }
        q += temp;
        k  = 3 - k;
        ij = 2*(p+1) * (3 - k) + 1;
    }



    cout << endl << "Prime numbers in a range <2;" << n << ">:" << endl;

    int counter = 0;
    if(n >= 2)
        cout << ++counter << ": 2" << endl;
    if(n >= 3)
        cout << ++counter << ": 3" << endl;

    bool* ptr = is_prime;
    for(int i=5; i <= n; i+=4, ++ptr)
    {
        if(*ptr)
            cout << ++counter << ": " << i << endl;
        i += 2;
        if(i <= n)
        {
            if(*(++ptr))
                cout << ++counter << ": " << i << endl;
        }
    }


    delete[] is_prime;

    cout << endl;
    system("pause");
    return 0;
}


